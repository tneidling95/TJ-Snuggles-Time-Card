/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tjsnuggles;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author trevorneidlinger
 */
public class timecardForm extends javax.swing.JFrame {

    /**
     * Creates new form java
     */
    TimeCard tc;
    
    public timecardForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Time Card Calculator");
        tc = new TimeCard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monStart = new javax.swing.JTextField();
        tuesStart = new javax.swing.JTextField();
        wedStart = new javax.swing.JTextField();
        thurStart = new javax.swing.JTextField();
        friStart = new javax.swing.JTextField();
        monLabel = new javax.swing.JLabel();
        tuesLabel = new javax.swing.JLabel();
        wedLabel = new javax.swing.JLabel();
        thurLabel = new javax.swing.JLabel();
        friLabel = new javax.swing.JLabel();
        endLabel = new javax.swing.JLabel();
        monEnd = new javax.swing.JTextField();
        tuesEnd = new javax.swing.JTextField();
        wedEnd = new javax.swing.JTextField();
        thurEnd = new javax.swing.JTextField();
        friEnd = new javax.swing.JTextField();
        startLabel = new javax.swing.JLabel();
        tuesVac = new javax.swing.JCheckBox();
        monVac = new javax.swing.JCheckBox();
        thurVac = new javax.swing.JCheckBox();
        wedVac = new javax.swing.JCheckBox();
        friVac = new javax.swing.JCheckBox();
        thurBirth = new javax.swing.JCheckBox();
        wedBirth = new javax.swing.JCheckBox();
        friBirth = new javax.swing.JCheckBox();
        tuesBirth = new javax.swing.JCheckBox();
        monBirth = new javax.swing.JCheckBox();
        calcButton = new javax.swing.JButton();
        prodHoursLabel = new javax.swing.JLabel();
        paidHoursLabel = new javax.swing.JLabel();
        attendLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        abText = new javax.swing.JTextField();
        prodhText = new javax.swing.JTextField();
        paidhText = new javax.swing.JTextField();
        monTotal = new javax.swing.JTextField();
        tuesTotal = new javax.swing.JTextField();
        wedTotal = new javax.swing.JTextField();
        thurTotal = new javax.swing.JTextField();
        friTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        friMan = new javax.swing.JCheckBox();
        breakLabel = new javax.swing.JLabel();
        monBreak = new javax.swing.JTextField();
        tuesBreak = new javax.swing.JTextField();
        wedBreak = new javax.swing.JTextField();
        thurBreak = new javax.swing.JTextField();
        friBreak = new javax.swing.JTextField();
        clearTot = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        monStart.setText("0");

        tuesStart.setText("0");

        wedStart.setText("0");

        thurStart.setText("0");

        friStart.setText("0");

        monLabel.setText("Monday");

        tuesLabel.setText("Tuesday");

        wedLabel.setText("Wednesday");

        thurLabel.setText("Thursday");

        friLabel.setText("Friday");

        endLabel.setText("End");

        monEnd.setText("0");

        tuesEnd.setText("0");

        wedEnd.setText("0");

        thurEnd.setText("0");

        friEnd.setText("0");

        startLabel.setText("Start");

        tuesVac.setText("Vacation");
        tuesVac.setToolTipText("");
        tuesVac.setFocusable(false);

        monVac.setText("Vacation");
        monVac.setToolTipText("");
        monVac.setFocusable(false);

        thurVac.setText("Vacation");
        thurVac.setToolTipText("");
        thurVac.setFocusable(false);

        wedVac.setText("Vacation");
        wedVac.setToolTipText("");
        wedVac.setFocusable(false);

        friVac.setText("Vacation");
        friVac.setToolTipText("");
        friVac.setFocusable(false);

        thurBirth.setText("Birthday");
        thurBirth.setFocusable(false);

        wedBirth.setText("Birthday");
        wedBirth.setFocusable(false);

        friBirth.setText("Birthday");
        friBirth.setFocusable(false);

        tuesBirth.setText("Birthday");
        tuesBirth.setFocusable(false);

        monBirth.setText("Birthday");
        monBirth.setFocusable(false);

        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        prodHoursLabel.setText("Product Hours:");

        paidHoursLabel.setText("Paid Hours:");

        attendLabel.setText("Attendance Bonus:");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        abText.setFocusable(false);

        prodhText.setFocusable(false);

        paidhText.setFocusable(false);

        monTotal.setFocusable(false);

        tuesTotal.setFocusable(false);

        wedTotal.setFocusable(false);

        thurTotal.setFocusable(false);

        friTotal.setFocusable(false);

        jLabel1.setText(" Total");

        friMan.setText("Mandatory");
        friMan.setFocusable(false);

        breakLabel.setText("Break/Vac/Bday");

        monBreak.setText("0");

        tuesBreak.setText("0");

        wedBreak.setText("0");

        thurBreak.setText("0");

        friBreak.setText("0");

        clearTot.setText("Clear Totals");
        clearTot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(clearTot))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(calcButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(resetButton)))
                        .addGap(232, 232, 232)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prodHoursLabel)
                            .addComponent(attendLabel)
                            .addComponent(paidHoursLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(paidhText)
                            .addComponent(prodhText)
                            .addComponent(abText, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(startLabel)
                                .addGap(42, 42, 42)
                                .addComponent(endLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(breakLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(monLabel)
                                    .addComponent(tuesLabel)
                                    .addComponent(wedLabel)
                                    .addComponent(thurLabel)
                                    .addComponent(friLabel))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(monStart, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .addComponent(thurStart, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .addComponent(wedStart, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .addComponent(tuesStart, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .addComponent(friStart))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(friEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(thurEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wedEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tuesEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(friBreak, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(thurBreak, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wedBreak, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monBreak, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tuesBreak, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(friVac)
                                    .addComponent(thurVac)
                                    .addComponent(wedVac)
                                    .addComponent(monVac)
                                    .addComponent(tuesVac))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(friBirth)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(friMan))
                                    .addComponent(monBirth)
                                    .addComponent(tuesBirth)
                                    .addComponent(wedBirth)
                                    .addComponent(thurBirth))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(friTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thurTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(wedTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(monTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tuesTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(endLabel)
                                .addComponent(breakLabel))
                            .addComponent(startLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(thurVac)
                                    .addComponent(thurBirth)
                                    .addComponent(thurTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(monEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(monVac)
                                        .addComponent(monBirth)
                                        .addComponent(monBreak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(monTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tuesEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tuesVac)
                                        .addComponent(tuesBirth)
                                        .addComponent(tuesBreak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tuesTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(wedEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wedVac)
                                        .addComponent(wedBirth)
                                        .addComponent(wedBreak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wedTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(32, 32, 32)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(monStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(monLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tuesStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tuesLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(wedStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(wedLabel))
                                        .addGap(32, 32, 32))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(thurLabel)
                                        .addComponent(thurStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(thurEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(thurBreak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(friLabel)
                                    .addComponent(friEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(friBreak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(friStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(friVac)
                                    .addComponent(friBirth)
                                    .addComponent(friMan)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(140, 140, 140)
                        .addComponent(friTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calcButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearTot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(attendLabel)
                            .addComponent(abText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodHoursLabel)
                            .addComponent(prodhText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paidHoursLabel)
                            .addComponent(paidhText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
            double[] val  = new double[5];
            
        
        //get monday values and calculate them while checking to see if number was entered
        try {
            double monSt = Double.parseDouble(monStart.getText());
            double monEn = Double.parseDouble(monEnd.getText());
            double monBr = Double.parseDouble(monBreak.getText());
            
            //check if values are input negative
            if(monSt < 0 || monEn < 0){
                JOptionPane.showMessageDialog(this, "Monday value was entered negative", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //values were entered the same
            if(monSt == monEn && monSt != 0){
                JOptionPane.showMessageDialog(this, "Monday values were entered the same", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //check if start time is greater than end time
            if(monSt > monEn){
                JOptionPane.showMessageDialog(this, "Start was greater than end in Monday.", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //vacation button selected
            if(monVac.isSelected()){
                tc.hoursWeek[0] = -1;
                val[0] = monBr;
                
            } else if(monBirth.isSelected()){
                tc.hoursWeek[0] = -2;
                val[0] = monBr;
                
            } else {
            
                // check if start time qualifies for being ontime
                if(monSt <= 6){
                    tc.onTime[0] = true;
                }

                //compute the time if both times are above zero
                if(monSt > 0 && monEn > 0) {
                    double t = tc.computeTime(monSt, monEn);
                    
                    //take out lunch break
                    if(monEn > 12.1){
                        t = t - 0.5;
                    }
                    
                    tc.hoursWeek[0] = t + monBr;
                } else if (monSt < 0){
                    tc.hoursWeek[0] = -1;
                }
            }
        
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Entered Number Wrong for Monday", "Error", JOptionPane.ERROR_MESSAGE);
            tc.resetVariables();
            return;
        }
        
        //get tuesday values and calculate them while checking to see if number was entered
        try {
            double tuesSt = Double.parseDouble(tuesStart.getText());
            double tuesEn = Double.parseDouble(tuesEnd.getText());
            double tuesBr = Double.parseDouble(tuesBreak.getText());
            
            //check if values are input negative
            if(tuesSt < 0 || tuesEn < 0){
                JOptionPane.showMessageDialog(this, "Tuesday value was entered negative", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //values were entered the same
            if(tuesSt == tuesEn && tuesSt != 0){
                JOptionPane.showMessageDialog(this, "Tuesday values were entered the same", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //check if start time is greater than end time
            if(tuesSt > tuesEn){
                JOptionPane.showMessageDialog(this, "Start was greater than end in Tuesday.", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //vacation button selected
            if(tuesVac.isSelected()){
                tc.hoursWeek[1] = -1;
                val[1] = tuesBr;
                        
            } else if(tuesBirth.isSelected()){
                tc.hoursWeek[1] = -2;
                val[1] = tuesBr;
                
            } else {
            
                // check if start time qualifies for being ontime
                if(tuesSt <= 6){
                    tc.onTime[1] = true;
                }

                //compute the time if both times are above zero
                if(tuesSt > 0 && tuesEn > 0) {
                    double t = tc.computeTime(tuesSt, tuesEn);
                    
                    //take out lunch break
                    if(tuesEn > 12.1){
                        t = t - 0.5;
                    }
                    tc.hoursWeek[1] = t + tuesBr;
                } else if (tuesSt < 0){
                    tc.hoursWeek[1] = -1;
                }
            }
         
        
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Entered Number Wrong for Tuesday", "Error", JOptionPane.ERROR_MESSAGE);
            tc.resetVariables();
            return;
        }
        
        //get wednesday values and calculate them while checking to see if number was entered
        try {
            double wedSt = Double.parseDouble(wedStart.getText());
            double wedEn = Double.parseDouble(wedEnd.getText());
            double wedBr = Double.parseDouble(wedBreak.getText());
            
            //check if values are input negative
            if(wedSt < 0 || wedEn < 0){
                JOptionPane.showMessageDialog(this, "Wednesday value was entered negative", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //values were entered the same
            if(wedSt == wedEn && wedSt != 0){
                JOptionPane.showMessageDialog(this, "Wednesday values were entered the same", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //check if start time is greater than end time
            if(wedSt > wedEn){
                JOptionPane.showMessageDialog(this, "Start was greater than end in Wednesday.", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //vacation button selected
            if(wedVac.isSelected()){
                tc.hoursWeek[2] = -1;
                val[2] = wedBr;
                
            } else if(wedBirth.isSelected()){
                tc.hoursWeek[2] = -2;
                val[2] = wedBr;
                
            } else {
            
                // check if start time qualifies for being ontime
                if(wedSt <= 6){
                    tc.onTime[2] = true;
                }

                //compute the time if both times are above zero
                if(wedSt > 0 && wedEn > 0) {
                    double t = tc.computeTime(wedSt, wedEn);
                    
                    //take out lunch break
                    if(wedEn > 12.1){
                        t = t - 0.5;
                    }
                    tc.hoursWeek[2] = t + wedBr;
                } else if (wedSt < 0){
                    tc.hoursWeek[2] = -1;
                }
            }
        
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Entered Number Wrong for Wednesday", "Error", JOptionPane.ERROR_MESSAGE);
            tc.resetVariables();
            return;
        }
        
        //get thursday values and calculate them while checking to see if number was entered
        try {
            double thurSt = Double.parseDouble(thurStart.getText());
            double thurEn = Double.parseDouble(thurEnd.getText());
            double thurBr = Double.parseDouble(thurBreak.getText());
            
            //check if values are input negative
            if(thurSt < 0 || thurEn < 0){
                JOptionPane.showMessageDialog(this, "Thursday value was entered negative", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //values were entered the same
            if(thurSt == thurEn && thurSt != 0){
                JOptionPane.showMessageDialog(this, "Thursday values were entered the same", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //check if start time is greater than end time
            if(thurSt > thurEn){
                JOptionPane.showMessageDialog(this, "Start was greater than end in Thursday.", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //vacation button selected
            if(thurVac.isSelected()){
                tc.hoursWeek[3] = -1;
                val[3] = thurBr;
                
            } else if(thurBirth.isSelected()){
                tc.hoursWeek[3] = -2;
                val[3] = thurBr;
                
            } else {
            
                // check if start time qualifies for being ontime
                if(thurSt <= 6){
                    tc.onTime[3] = true;
                }

                //compute the time if both times are above zero
                if(thurSt > 0 && thurEn > 0) {
                    double t = tc.computeTime(thurSt, thurEn);
                    
                    //take out lunch break
                    if(thurEn > 12.1){
                        t = t - 0.5;
                    }
                    tc.hoursWeek[3] = t + thurBr;
                } else if (thurSt < 0){
                    tc.hoursWeek[3] = -1;
                }
            }
        
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Entered Number Wrong for Thursday", "Error", JOptionPane.ERROR_MESSAGE);
            tc.resetVariables();
            return;
        }
        
        //get friday values and calculate them while checking to see if number was entered
        try {
            double friSt = Double.parseDouble(friStart.getText());
            double friEn = Double.parseDouble(friEnd.getText());
            double friBr = Double.parseDouble(friBreak.getText());
            
            //check if values are input negative
            if(friSt < 0 || friEn < 0){
                JOptionPane.showMessageDialog(this, "Friday value was entered negative", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //values were entered the same
            if(friSt == friEn && friSt != 0){
                JOptionPane.showMessageDialog(this, "Friday values were entered the same", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //check if start time is greater than end time
            if(friSt > friEn){
                JOptionPane.showMessageDialog(this, "Start was greater than end in Friday.", "Error", JOptionPane.ERROR_MESSAGE);
                tc.resetVariables();
                return;
            }
            
            //vacation button selected
            if(friVac.isSelected()){
                tc.hoursWeek[4] = -1;
                val[4] = friBr;
                
            } else if(friBirth.isSelected()){
                tc.hoursWeek[4] = -2;
                val[4] = friBr;
                
            } else {
            
                // check if start time qualifies for being ontime
                if(friSt <= 6){
                    tc.onTime[4] = true;
                }

                //compute the time if both times are above zero
                if(friSt > 0 && friEn > 0) {
                    double t = tc.computeTime(friSt, friEn);
                    
                    //take out lunch break
                    if(friEn > 12.1){
                        t = t - 0.5;
                    }
                    
                    tc.hoursWeek[4] = t + friBr;
                } else if (friSt < 0){
                    tc.hoursWeek[4] = -1;
                }
            }
            
            if(friMan.isSelected()){
                tc.friMan = true;
            }
        
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Entered Number Wrong for Friday", "Error", JOptionPane.ERROR_MESSAGE);
            tc.resetVariables();
            return;
        }
        
        //set and calculate values
        tc.calculateAttendanceBonus();
        //abText.setText(""+ (double)Math.round(tc.attendanceBonus * 100000d) / 100000d);
        tc.calculateProductionHours();
        //prodhText.setText("" + (double)Math.round(tc.productionHours * 100000d) / 100000d);
        tc.calculatePaidHours(val);
        //paidhText.setText("" + (double)Math.round(tc.paidHours * 100000d) / 100000d);
        
        abText.setText(""+ (double)Math.round(tc.attendanceBonus * 100000d) / 100000d);
        prodhText.setText("" + (double)Math.round(tc.productionHours * 100000d) / 100000d);
        paidhText.setText("" + (double)Math.round(tc.paidHours * 100000d) / 100000d);
        
        tc.convertHours();
        
        //set total values
        monTotal.setText("" + (double)Math.round(tc.hoursWeek[0] * 100000d) / 100000d);
        tuesTotal.setText("" + (double)Math.round(tc.hoursWeek[1] * 100000d) / 100000d);
        wedTotal.setText("" + (double)Math.round(tc.hoursWeek[2] * 100000d) / 100000d);
        thurTotal.setText("" + (double)Math.round(tc.hoursWeek[3] * 100000d) / 100000d);
        friTotal.setText("" + (double)Math.round(tc.hoursWeek[4] * 100000d) / 100000d);
 
        
    }//GEN-LAST:event_calcButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        tc.resetVariables();
        
        monStart.setText("0");
        monEnd.setText("0");
        tuesStart.setText("0");
        tuesEnd.setText("0");
        wedStart.setText("0");
        wedEnd.setText("0");
        thurStart.setText("0");
        thurEnd.setText("0");
        friStart.setText("0");
        friEnd.setText("0");
        
        monTotal.setText("");
        tuesTotal.setText("");
        wedTotal.setText("");
        thurTotal.setText("");
        friTotal.setText("");
        
        monBreak.setText("0");
        tuesBreak.setText("0");
        wedBreak.setText("0");
        thurBreak.setText("0");
        friBreak.setText("0");
        
        monVac.setSelected(false);
        monBirth.setSelected(false);
        tuesVac.setSelected(false);
        tuesBirth.setSelected(false);
        wedVac.setSelected(false);
        wedBirth.setSelected(false);
        thurVac.setSelected(false);
        thurBirth.setSelected(false);
        friVac.setSelected(false);
        friBirth.setSelected(false);
        
        friMan.setSelected(false);
        
        abText.setText("");
        paidhText.setText("");
        prodhText.setText("");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void clearTotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTotActionPerformed
        monTotal.setText("");
        tuesTotal.setText("");
        wedTotal.setText("");
        thurTotal.setText("");
        friTotal.setText("");
        abText.setText("");
        paidhText.setText("");
        prodhText.setText("");
        tc.resetVariables();
    }//GEN-LAST:event_clearTotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(timecardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(timecardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(timecardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(timecardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new timecardForm().setVisible(true);
            }
        });
        /*
        TimeCard tc = new TimeCard();
        
                
        for(int i = 0; i < 5; i++) {
            Scanner s = new Scanner(System.in);
            System.out.println("Enter start hour day " + i);
            double start = s.nextDouble();
            System.out.println("Enter end hour day " + i);
            double end = s.nextDouble();
        
        

            if(start <= 6){
                tc.onTime[i] = true;
            }

            if(start > 0 && end > 0) {
                double t = tc.computeTime(start, end);
                t = t - 0.5;
                tc.hoursWeek[i] = t;
            } else if (start < 0){
                tc.hoursWeek[i] = -1;
            }
        }

        tc.calculateProductionHours();
        System.out.println(tc.productionHours);
        tc.calculatePaidHours();
        System.out.println(tc.paidHours);
        tc.calculateAttendanceBonus();
        System.out.println(tc.attendanceBonus);*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField abText;
    private javax.swing.JLabel attendLabel;
    private javax.swing.JLabel breakLabel;
    private javax.swing.JButton calcButton;
    private javax.swing.JButton clearTot;
    private javax.swing.JLabel endLabel;
    private javax.swing.JCheckBox friBirth;
    private javax.swing.JTextField friBreak;
    private javax.swing.JTextField friEnd;
    private javax.swing.JLabel friLabel;
    private javax.swing.JCheckBox friMan;
    private javax.swing.JTextField friStart;
    private javax.swing.JTextField friTotal;
    private javax.swing.JCheckBox friVac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox monBirth;
    private javax.swing.JTextField monBreak;
    private javax.swing.JTextField monEnd;
    private javax.swing.JLabel monLabel;
    private javax.swing.JTextField monStart;
    private javax.swing.JTextField monTotal;
    private javax.swing.JCheckBox monVac;
    private javax.swing.JLabel paidHoursLabel;
    private javax.swing.JTextField paidhText;
    private javax.swing.JLabel prodHoursLabel;
    private javax.swing.JTextField prodhText;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel startLabel;
    private javax.swing.JCheckBox thurBirth;
    private javax.swing.JTextField thurBreak;
    private javax.swing.JTextField thurEnd;
    private javax.swing.JLabel thurLabel;
    private javax.swing.JTextField thurStart;
    private javax.swing.JTextField thurTotal;
    private javax.swing.JCheckBox thurVac;
    private javax.swing.JCheckBox tuesBirth;
    private javax.swing.JTextField tuesBreak;
    private javax.swing.JTextField tuesEnd;
    private javax.swing.JLabel tuesLabel;
    private javax.swing.JTextField tuesStart;
    private javax.swing.JTextField tuesTotal;
    private javax.swing.JCheckBox tuesVac;
    private javax.swing.JCheckBox wedBirth;
    private javax.swing.JTextField wedBreak;
    private javax.swing.JTextField wedEnd;
    private javax.swing.JLabel wedLabel;
    private javax.swing.JTextField wedStart;
    private javax.swing.JTextField wedTotal;
    private javax.swing.JCheckBox wedVac;
    // End of variables declaration//GEN-END:variables

}
